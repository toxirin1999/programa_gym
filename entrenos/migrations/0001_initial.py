# Generated by Django 5.2 on 2025-08-24 17:30

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
        ('rutinas', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EjercicioBaseObsoleto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('grupo_muscular', models.CharField(choices=[('Pecho', 'Pecho'), ('Espalda', 'Espalda'), ('Piernas', 'Piernas'), ('Hombros', 'Hombros'), ('Bíceps', 'Bíceps'), ('Tríceps', 'Tríceps'), ('Glúteos', 'Glúteos'), ('Core', 'Core'), ('Cardio', 'Cardio'), ('Otros', 'Otros')], max_length=50)),
                ('equipo', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EstadoEmocional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Estado Emocional',
                'verbose_name_plural': 'Estados Emocionales',
            },
        ),
        migrations.CreateModel(
            name='GrupoMuscular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rutina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EntrenoRealizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=django.utils.timezone.now)),
                ('procesado_gamificacion', models.BooleanField(default=False)),
                ('fuente_datos', models.CharField(choices=[('manual', 'Manual'), ('liftin', 'Liftin')], default='manual', max_length=20)),
                ('liftin_workout_id', models.CharField(blank=True, max_length=100, null=True)),
                ('hora_inicio', models.TimeField(blank=True, null=True)),
                ('hora_fin', models.TimeField(blank=True, null=True)),
                ('duracion_minutos', models.PositiveIntegerField(blank=True, null=True)),
                ('numero_ejercicios', models.PositiveIntegerField(blank=True, help_text='Número total de ejercicios realizados', null=True)),
                ('tiempo_total_formateado', models.CharField(blank=True, help_text='Duración total en texto (ej: 1:10:23)', max_length=20, null=True)),
                ('calorias_quemadas', models.PositiveIntegerField(blank=True, null=True)),
                ('frecuencia_cardiaca_promedio', models.PositiveIntegerField(blank=True, null=True)),
                ('frecuencia_cardiaca_maxima', models.PositiveIntegerField(blank=True, null=True)),
                ('volumen_total_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('nombre_rutina_liftin', models.CharField(blank=True, max_length=200, null=True)),
                ('notas_liftin', models.TextField(blank=True, null=True)),
                ('fecha_importacion', models.DateTimeField(blank=True, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
                ('rutina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rutinas.rutina')),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='EjercicioRealizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ejercicio', models.CharField(max_length=100)),
                ('grupo_muscular', models.CharField(blank=True, max_length=50, null=True)),
                ('peso_kg', models.FloatField(default=0)),
                ('series', models.PositiveIntegerField(default=1)),
                ('repeticiones', models.PositiveIntegerField(default=1)),
                ('tempo', models.CharField(blank=True, max_length=10, null=True)),
                ('rpe', models.PositiveIntegerField(blank=True, null=True)),
                ('rir', models.PositiveIntegerField(blank=True, null=True)),
                ('fallo_muscular', models.BooleanField(default=False)),
                ('orden', models.PositiveIntegerField(default=0)),
                ('completado', models.BooleanField(default=True)),
                ('nuevo_record', models.BooleanField(default=False)),
                ('fuente_datos', models.CharField(default='manual', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('entreno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ejercicios_realizados', to='entrenos.entrenorealizado')),
            ],
        ),
        migrations.CreateModel(
            name='EjercicioLiftinDetallado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ejercicio', models.CharField(help_text='Nombre del ejercicio como aparece en Liftin', max_length=200)),
                ('orden_ejercicio', models.PositiveIntegerField(default=1, help_text='Orden del ejercicio en la rutina')),
                ('peso_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Peso utilizado en kg', max_digits=8, null=True)),
                ('peso_formateado', models.CharField(blank=True, help_text='Peso como aparece en Liftin (ej: 268.5 kg, PC, 90-100 kg)', max_length=50, null=True)),
                ('series_realizadas', models.PositiveIntegerField(default=1, help_text='Número de series realizadas')),
                ('repeticiones_formateado', models.CharField(blank=True, help_text='Repeticiones como aparecen en Liftin (ej: 3x5-10, 3x10-12)', max_length=50, null=True)),
                ('repeticiones_min', models.PositiveIntegerField(blank=True, help_text='Repeticiones mínimas por serie', null=True)),
                ('repeticiones_max', models.PositiveIntegerField(blank=True, help_text='Repeticiones máximas por serie', null=True)),
                ('completado', models.BooleanField(default=True, help_text='Si el ejercicio fue completado exitosamente')),
                ('estado_liftin', models.CharField(choices=[('completado', '✓ Completado'), ('fallado', '✗ Fallado'), ('nuevo', 'N Nuevo'), ('parcial', '~ Parcial')], default='completado', help_text='Estado del ejercicio según Liftin', max_length=20)),
                ('notas_ejercicio', models.TextField(blank=True, help_text='Notas específicas de este ejercicio', null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('entreno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ejercicios_liftin_detallados', to='entrenos.entrenorealizado')),
            ],
            options={
                'verbose_name': 'Ejercicio Detallado de Liftin',
                'verbose_name_plural': 'Ejercicios Detallados de Liftin',
                'ordering': ['entreno', 'orden_ejercicio'],
            },
        ),
        migrations.CreateModel(
            name='EjercicioLiftin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del ejercicio (ej: Prensa, Curl Femoral Tumbado)', max_length=200)),
                ('orden', models.PositiveIntegerField(default=1, help_text='Orden del ejercicio en la rutina')),
                ('peso_texto', models.CharField(blank=True, help_text='Peso como aparece en Liftin (ej: 268.5 kg, PC, 90-100 kg)', max_length=50, null=True)),
                ('repeticiones_texto', models.CharField(blank=True, help_text='Repeticiones como aparecen en Liftin (ej: 3x5-10, 3x10-12)', max_length=50, null=True)),
                ('estado', models.CharField(choices=[('completado', '✓ Completado'), ('fallado', '✗ Fallado'), ('nuevo', 'N Nuevo'), ('parcial', '~ Parcial')], default='completado', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('entreno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ejercicios_liftin', to='entrenos.entrenorealizado')),
            ],
            options={
                'verbose_name': 'Ejercicio de Liftin',
                'verbose_name_plural': 'Ejercicios de Liftin',
                'ordering': ['entreno', 'orden'],
            },
        ),
        migrations.CreateModel(
            name='DetalleEjercicioRealizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.PositiveIntegerField()),
                ('repeticiones', models.PositiveIntegerField()),
                ('peso_kg', models.DecimalField(decimal_places=2, max_digits=5)),
                ('completado', models.BooleanField(default=True)),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rutinas.ejerciciobase')),
                ('entreno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles_ejercicio', to='entrenos.entrenorealizado')),
            ],
        ),
        migrations.CreateModel(
            name='DatosLiftinDetallados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datos_frecuencia_cardiaca', models.JSONField(blank=True, help_text='Array de datos de frecuencia cardíaca con timestamps', null=True)),
                ('version_liftin', models.CharField(blank=True, max_length=20, null=True)),
                ('dispositivo_origen', models.CharField(blank=True, max_length=50, null=True)),
                ('sincronizado_health', models.BooleanField(default=False)),
                ('health_workout_uuid', models.CharField(blank=True, max_length=100, null=True)),
                ('metadatos_adicionales', models.JSONField(blank=True, help_text='Otros datos específicos de Liftin en formato JSON', null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('entreno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datos_liftin', to='entrenos.entrenorealizado')),
            ],
            options={
                'verbose_name': 'Datos Detallados de Liftin',
                'verbose_name_plural': 'Datos Detallados de Liftin',
            },
        ),
        migrations.CreateModel(
            name='LogroDesbloqueado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('fecha', models.DateField(auto_now_add=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('rutina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entrenos.rutina')),
            ],
        ),
        migrations.CreateModel(
            name='SerieRealizada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serie_numero', models.PositiveIntegerField()),
                ('repeticiones', models.PositiveIntegerField()),
                ('completado', models.BooleanField(default=False)),
                ('peso_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rutinas.ejerciciobase')),
                ('entreno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series', to='entrenos.entrenorealizado')),
            ],
        ),
        migrations.CreateModel(
            name='PlanPersonalizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repeticiones_objetivo', models.PositiveIntegerField(default=10)),
                ('peso_objetivo', models.FloatField(default=0)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rutinas.ejerciciobase')),
                ('rutina', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rutinas.rutina')),
            ],
            options={
                'unique_together': {('cliente', 'ejercicio', 'rutina')},
            },
        ),
        migrations.CreateModel(
            name='RegistroWhoop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=django.utils.timezone.now)),
                ('strain', models.DecimalField(decimal_places=1, max_digits=4)),
                ('recovery', models.PositiveSmallIntegerField(help_text='Porcentaje')),
                ('horas_sueno', models.DurationField()),
                ('rhr', models.PositiveIntegerField(blank=True, null=True)),
                ('hrv', models.PositiveIntegerField(blank=True, null=True)),
                ('sueno_necesario', models.DurationField()),
                ('sleep_performance', models.PositiveSmallIntegerField(help_text='Porcentaje')),
                ('horas_vs_necesidad', models.FloatField(blank=True, null=True)),
                ('regularidad_sueno', models.FloatField(blank=True, null=True)),
                ('eficiencia_sueno', models.FloatField(blank=True, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('cliente', 'fecha')},
            },
        ),
    ]
