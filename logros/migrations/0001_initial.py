# Generated by Django 5.2 on 2025-08-24 17:30

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
        ('entrenos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Arquetipo',
            fields=[
                ('nivel', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='Nivel')),
                ('nombre_personaje', models.CharField(max_length=100, verbose_name='Nombre del Personaje')),
                ('titulo_arquetipo', models.CharField(max_length=100, verbose_name='Título del Arquetipo')),
                ('filosofia', models.TextField(verbose_name='Filosofía del Nivel')),
                ('puntos_requeridos', models.PositiveIntegerField(verbose_name='Puntos Requeridos para Desbloquear')),
                ('icono_fa', models.CharField(blank=True, help_text="Ej: 'fas fa-fist-raised'", max_length=50, null=True)),
                ('imagen_url', models.URLField(blank=True, help_text='URL a una imagen épica del personaje.', null=True)),
            ],
            options={
                'verbose_name': 'Arquetipo (Nivel)',
                'verbose_name_plural': 'Arquetipos (Niveles)',
                'ordering': ['nivel'],
            },
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('periodo', models.CharField(choices=[('diario', 'Diario'), ('semanal', 'Semanal'), ('mensual', 'Mensual'), ('especial', 'Especial')], max_length=20, verbose_name='Período')),
                ('puntos_recompensa', models.PositiveIntegerField(verbose_name='Puntos de recompensa')),
                ('activa', models.BooleanField(default=True, verbose_name='Activa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
            ],
            options={
                'verbose_name': 'Quest',
                'verbose_name_plural': 'Quests',
            },
        ),
        migrations.CreateModel(
            name='TipoQuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('icono', models.CharField(blank=True, max_length=50, verbose_name='Icono')),
            ],
            options={
                'verbose_name': 'Tipo de Quest',
                'verbose_name_plural': 'Tipos de Quest',
            },
        ),
        migrations.CreateModel(
            name='PerfilGamificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntos_totales', models.PositiveIntegerField(default=0, verbose_name='Puntos totales')),
                ('fecha_ultimo_entreno', models.DateTimeField(blank=True, null=True, verbose_name='Fecha del último entrenamiento')),
                ('racha_actual', models.PositiveIntegerField(default=0, verbose_name='Racha actual')),
                ('racha_maxima', models.PositiveIntegerField(default=0, verbose_name='Racha máxima')),
                ('entrenos_totales', models.PositiveIntegerField(default=0, verbose_name='Entrenamientos totales')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('cliente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_gamificacion', to='clientes.cliente', verbose_name='Cliente')),
                ('nivel_actual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perfiles', to='logros.arquetipo', verbose_name='Arquetipo Actual')),
            ],
            options={
                'verbose_name': 'Perfil de Gamificación',
                'verbose_name_plural': 'Perfiles de Gamificación',
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('logro', 'Logro'), ('quest', 'Quest'), ('nivel', 'Nivel'), ('general', 'General')], max_length=20, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('mensaje', models.TextField(verbose_name='Mensaje')),
                ('leida', models.BooleanField(default=False, verbose_name='Leída')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('perfil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to='logros.perfilgamificacion')),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PruebaLegendaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre de la Prueba')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('clave_calculo', models.CharField(help_text='Identificador para la lógica de cálculo.', max_length=50, unique=True)),
                ('meta_valor', models.FloatField(default=1.0)),
                ('puntos_recompensa', models.PositiveIntegerField(default=100)),
                ('es_secreta', models.BooleanField(default=False, help_text='Oculta hasta ser completada.')),
                ('arquetipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pruebas', to='logros.arquetipo')),
            ],
            options={
                'verbose_name': 'Prueba Legendaria (Logro)',
                'verbose_name_plural': 'Pruebas Legendarias (Logros)',
                'ordering': ['arquetipo', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='HistorialPuntos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntos', models.PositiveIntegerField(verbose_name='Puntos')),
                ('descripcion', models.CharField(blank=True, max_length=255, verbose_name='Descripción')),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha')),
                ('entreno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='entrenos.entrenorealizado')),
                ('perfil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_puntos', to='logros.perfilgamificacion')),
                ('prueba_legendaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='puntos_otorgados', to='logros.pruebalegendaria')),
                ('quest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='puntos_otorgados', to='logros.quest')),
            ],
            options={
                'verbose_name': 'Historial de Puntos',
                'verbose_name_plural': 'Historial de Puntos',
                'ordering': ['-fecha'],
            },
        ),
        migrations.AddField(
            model_name='quest',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logros.tipoquest', verbose_name='Tipo'),
        ),
        migrations.CreateModel(
            name='PruebaUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progreso_actual', models.FloatField(default=0)),
                ('completada', models.BooleanField(default=False)),
                ('fecha_completada', models.DateTimeField(blank=True, null=True)),
                ('perfil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pruebas_completadas', to='logros.perfilgamificacion')),
                ('prueba', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logros.pruebalegendaria')),
            ],
            options={
                'verbose_name': 'Progreso de Prueba de Usuario',
                'verbose_name_plural': 'Progresos de Pruebas de Usuarios',
                'unique_together': {('perfil', 'prueba')},
            },
        ),
        migrations.CreateModel(
            name='QuestUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progreso_actual', models.FloatField(default=0, verbose_name='Progreso actual')),
                ('completada', models.BooleanField(default=False, verbose_name='Completada')),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de inicio')),
                ('fecha_completada', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de completada')),
                ('perfil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quests_usuario', to='logros.perfilgamificacion')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logros.quest')),
            ],
            options={
                'verbose_name': 'Quest de Usuario',
                'verbose_name_plural': 'Quests de Usuario',
                'unique_together': {('perfil', 'quest')},
            },
        ),
    ]
