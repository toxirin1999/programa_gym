# Generated by Django 5.2 on 2025-08-24 17:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalisisEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ejercicio', models.CharField(max_length=200)),
                ('fecha', models.DateField()),
                ('peso_maximo', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('peso_promedio', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('volumen_ejercicio', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('repeticiones_totales', models.IntegerField(default=0)),
                ('series_totales', models.IntegerField(default=0)),
                ('progresion_peso', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('progresion_volumen', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('one_rm_estimado', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('completado_exitosamente', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Análisis de Ejercicio',
                'verbose_name_plural': 'Análisis de Ejercicios',
                'ordering': ['-fecha', 'nombre_ejercicio'],
            },
        ),
        migrations.CreateModel(
            name='AnotacionEntrenamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('tipo', models.CharField(choices=[('PR', 'Récord Personal'), ('INICIO', 'Inicio de Programa'), ('FIN', 'Fin de Programa'), ('LESION', 'Lesión o Molestia'), ('DESCANSO', 'Semana de Descarga'), ('EVENTO', 'Evento o Competición'), ('OTRO', 'Otro')], default='OTRO', max_length=10)),
                ('descripcion', models.CharField(max_length=255)),
                ('ejercicio_asociado', models.CharField(blank=True, help_text='Opcional: asociar a un ejercicio específico', max_length=100, null=True)),
                ('creada_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='CacheAnalisis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_analisis', models.CharField(max_length=100)),
                ('parametros_hash', models.CharField(max_length=64)),
                ('resultado', models.JSONField()),
                ('tiempo_calculo', models.DecimalField(decimal_places=3, max_digits=8)),
                ('datos_utilizados', models.IntegerField()),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Cache de Análisis',
                'verbose_name_plural': 'Caches de Análisis',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComparativaRendimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_comparativa', models.CharField(choices=[('temporal', 'Temporal (períodos)'), ('poblacion', 'Con Población'), ('objetivo', 'Con Objetivo'), ('ejercicios', 'Entre Ejercicios')], max_length=50)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('metrica_principal', models.CharField(max_length=50)),
                ('valor_cliente', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valor_referencia', models.DecimalField(decimal_places=2, max_digits=10)),
                ('percentil', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('clasificacion', models.CharField(choices=[('excepcional', 'Excepcional'), ('muy_bueno', 'Muy Bueno'), ('bueno', 'Bueno'), ('promedio', 'Promedio'), ('por_debajo', 'Por Debajo del Promedio'), ('necesita_mejora', 'Necesita Mejora')], max_length=20)),
                ('diferencia_absoluta', models.DecimalField(decimal_places=2, max_digits=10)),
                ('diferencia_porcentual', models.DecimalField(decimal_places=2, max_digits=5)),
                ('significancia', models.CharField(choices=[('muy_significativa', 'Muy Significativa'), ('significativa', 'Significativa'), ('moderada', 'Moderada'), ('no_significativa', 'No Significativa')], max_length=20)),
                ('poblacion_referencia', models.CharField(blank=True, max_length=100, null=True)),
                ('tamaño_muestra', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Comparativa de Rendimiento',
                'verbose_name_plural': 'Comparativas de Rendimiento',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MetaRendimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ejercicio', models.CharField(max_length=100)),
                ('fecha_objetivo', models.DateField()),
                ('valor_objetivo', models.DecimalField(decimal_places=2, max_digits=7)),
                ('creada_en', models.DateTimeField(auto_now_add=True)),
                ('alcanzada', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-fecha_objetivo'],
            },
        ),
        migrations.CreateModel(
            name='MetricaRendimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('volumen_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('intensidad_promedio', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('carga_entrenamiento', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('duracion_total', models.IntegerField(default=0)),
                ('calorias_totales', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('indice_fatiga', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('eficiencia_entrenamiento', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('densidad_entrenamiento', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('fuerza_relativa', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('volumen_por_grupo', models.JSONField(default=dict)),
                ('fc_promedio', models.IntegerField(blank=True, null=True)),
                ('fc_maxima', models.IntegerField(blank=True, null=True)),
                ('entrenamientos_dia', models.IntegerField(default=0)),
                ('ejercicios_totales', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Métrica de Rendimiento',
                'verbose_name_plural': 'Métricas de Rendimiento',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='PrediccionRendimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ejercicio', models.CharField(blank=True, max_length=200, null=True)),
                ('tipo_prediccion', models.CharField(choices=[('1rm', '1RM Estimado'), ('volumen', 'Volumen Semanal'), ('progresion', 'Progresión General'), ('peso_objetivo', 'Peso Objetivo'), ('tiempo_objetivo', 'Tiempo para Objetivo')], max_length=50)),
                ('valor_actual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valor_predicho', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_prediccion', models.DateField()),
                ('confianza', models.DecimalField(decimal_places=2, max_digits=5)),
                ('algoritmo_usado', models.CharField(max_length=100)),
                ('parametros', models.JSONField(default=dict)),
                ('datos_entrenamiento', models.IntegerField(default=0)),
                ('activa', models.BooleanField(default=True)),
                ('verificada', models.BooleanField(default=False)),
                ('precision_real', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Predicción de Rendimiento',
                'verbose_name_plural': 'Predicciones de Rendimiento',
                'ordering': ['-fecha_prediccion', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecomendacionEntrenamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('ejercicio', 'Nuevo Ejercicio'), ('intensidad', 'Ajuste de Intensidad'), ('volumen', 'Ajuste de Volumen'), ('descanso', 'Tiempo de Descanso'), ('frecuencia', 'Frecuencia de Entrenamiento'), ('tecnica', 'Mejora de Técnica'), ('variacion', 'Variación de Rutina'), ('recuperacion', 'Recuperación'), ('nutricion', 'Apoyo Nutricional')], max_length=50)),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('prioridad', models.IntegerField(choices=[(1, 'Alta'), (2, 'Media'), (3, 'Baja')], default=2)),
                ('metricas_base', models.JSONField(default=dict)),
                ('impacto_esperado', models.CharField(max_length=100)),
                ('ejercicio_relacionado', models.CharField(blank=True, max_length=200, null=True)),
                ('aplicada', models.BooleanField(default=False)),
                ('fecha_aplicacion', models.DateTimeField(blank=True, null=True)),
                ('efectividad', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('feedback_usuario', models.TextField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Recomendación de Entrenamiento',
                'verbose_name_plural': 'Recomendaciones de Entrenamiento',
                'ordering': ['prioridad', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TendenciaProgresion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ejercicio', models.CharField(max_length=200)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('periodo_dias', models.IntegerField(default=90)),
                ('tendencia_general', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('peso_maximo', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('sesiones_totales', models.IntegerField(default=0)),
                ('tipo_tendencia', models.CharField(choices=[('creciente', 'Creciente'), ('decreciente', 'Decreciente'), ('estable', 'Estable'), ('irregular', 'Irregular')], max_length=20)),
                ('velocidad_progresion', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('consistencia', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('confianza', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('valor_inicial', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('valor_final', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('valor_maximo', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('estancamientos_detectados', models.IntegerField(default=0)),
                ('picos_detectados', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tendencia de Progresión',
                'verbose_name_plural': 'Tendencias de Progresión',
                'ordering': ['-fecha_fin', 'nombre_ejercicio'],
            },
        ),
    ]
