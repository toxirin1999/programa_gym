"""
Django settings for gymproject project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'una-clave-secreta-por-defecto-para-desarrollo')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'

ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '127.0.0.1').split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'clientes.apps.ClientesConfig',
    'rutinas',
    'dietas',
    'entrenos',
    'widget_tweaks',
    'joi',
    'logros.apps.LogrosConfig',
    'analytics',
    'estoico',
    'django_celery_beat',
    'nutricion_app_django',
]
# Configuraci√≥n de Celery (para notificaciones)
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'America/Mexico_City'
# Configuraci√≥n de notificaciones push
PUSH_NOTIFICATION_URL = 'https://fcm.googleapis.com/fcm/send'
PUSH_NOTIFICATION_KEY = 'tu_clave_fcm_aqui'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]
USE_I18N = True
ROOT_URLCONF = 'gymproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'joi.context_processors.joi_context',
                'joi.context_processors.utility_functions',
                'estoico.context_processors.estoico_context',

            ],
        },
    },
]

WSGI_APPLICATION = 'gymproject.wsgi.application'

# Busca la secci√≥n DATABASES y reempl√°zala entera por esto:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# A√±ade esta l√≥gica para la base de datos de producci√≥n
DATABASE_URL = os.environ.get('DATABASE_URL')
if DATABASE_URL:
    DATABASES['default'] = dj_database_url.parse(DATABASE_URL)

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'joi', 'static'),  # A√±ade esta l√≠nea
]

# Aseg√∫rate de que STATICFILES_DIRS tambi√©n est√© configurado
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/redirigir/'  # Ruta intermedia para decidir a d√≥nde ir

LOGIN_URL = '/login/'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

ANALYTICS_CONFIG = {
    'CACHE_TIMEOUT': 3600,  # 1 hora
    'PREDICCION_DIAS_FUTURO': 30,
    'MIN_DATOS_PREDICCION': 10,
    'ALGORITMOS_HABILITADOS': [
        'regresion_lineal',
        'media_movil',
        'tendencia_exponencial'
    ]
}
# Configuraci√≥n de cache para IA (opcional pero recomendado)
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}
# En settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file_ia': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/ia.log',
        },
    },
    'loggers': {
        'analytics.ia': {
            'handlers': ['file_ia'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

LOGS_DIR = os.path.join(BASE_DIR, 'logs')
os.makedirs(LOGS_DIR, exist_ok=True)

# Configuraci√≥n de logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
        'gamificacion': {
            'format': 'üéÆ {asctime} - {levelname} - {message}',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'gamificacion_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(LOGS_DIR, 'gamificacion.log'),
            'formatter': 'gamificacion',
            'encoding': 'utf-8',
        },
        'gamificacion_console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'gamificacion',
        },
        'gamificacion_debug': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(LOGS_DIR, 'gamificacion_debug.log'),
            'formatter': 'verbose',
            'encoding': 'utf-8',
        },
    },
    'loggers': {
        'gamificacion': {
            'handlers': ['gamificacion_file', 'gamificacion_console'],
            'level': 'INFO',
            'propagate': False,
        },
        'gamificacion.debug': {
            'handlers': ['gamificacion_debug'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Mensaje de confirmaci√≥n
print("‚úÖ Configuraci√≥n de logging para gamificaci√≥n cargada")
print(f"üìÅ Logs se guardar√°n en: {LOGS_DIR}")

# ============================================================================
# CONFIGURACI√ìN ADICIONAL PARA GAMIFICACI√ìN
# ============================================================================

# Configuraciones espec√≠ficas para el sistema de gamificaci√≥n
GAMIFICACION_CONFIG = {
    'AUTO_PROCESS': True,  # Procesamiento autom√°tico activado
    'LOG_LEVEL': 'INFO',  # Nivel de logging
    'VALIDATE_INTEGRITY': True,  # Validaci√≥n de integridad activada
    'NOTIFICATION_ENABLED': True,  # Notificaciones activadas
}
