# Generated by Django 5.2 on 2025-08-24 17:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nutricion_app_django', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BitacoraDiaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now_add=True)),
                ('horas_sueno', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('humor', models.CharField(blank=True, choices=[('verde', 'üòä Bien'), ('amarillo', 'üòê Neutro'), ('rojo', 'üòû Bajo')], max_length=20, null=True)),
                ('rpe', models.PositiveSmallIntegerField(blank=True, help_text='Esfuerzo percibido (1-10)', null=True)),
                ('nota_personal', models.TextField(blank=True, null=True)),
                ('mindfulness_am', models.BooleanField(default=False)),
                ('mindfulness_pm', models.BooleanField(default=False)),
                ('peso_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('energia_subjetiva', models.PositiveSmallIntegerField(blank=True, help_text='Energ√≠a subjetiva de 0 a 10', null=True)),
                ('dolor_articular', models.PositiveSmallIntegerField(blank=True, help_text='Dolor articular de 0 a 10', null=True)),
                ('autoconciencia', models.TextField(blank=True, help_text='¬øQu√© emoci√≥n domina (0-10)?', null=True)),
                ('descarga_cognitiva', models.TextField(blank=True, help_text='Escribe 5‚Äô ‚Äúlo que me preocupa AHORA‚Äù', null=True)),
                ('rumiacion_baja', models.BooleanField(blank=True, help_text='¬øLa rumiaci√≥n baj√≥ despu√©s de escribir?', null=True)),
                ('circunferencia_biceps', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('emocion_dia', models.CharField(blank=True, max_length=100, null=True)),
                ('cosas_positivas', models.TextField(blank=True, help_text='Escribe 3 cosas que funcionaron hoy.', null=True)),
                ('aprendizaje', models.TextField(blank=True, null=True)),
                ('quien_quiero_ser', models.TextField(blank=True, help_text='Describe qu√© tipo de persona quieres ser hoy.', null=True)),
                ('tareas_dia', models.TextField(blank=True, help_text='Escribe hasta 5 tareas importantes para hoy, separadas por saltos de l√≠nea.', null=True)),
                ('que_puedo_mejorar', models.TextField(blank=True, help_text='Reflexiona sobre qu√© podr√≠as mejorar del d√≠a.', null=True)),
                ('reflexion_diaria', models.TextField(blank=True, help_text='Escribe una reflexi√≥n libre sobre tu d√≠a.', null=True)),
                ('limito_socialmente', models.BooleanField(help_text='¬øRespondiste solo, sin iniciar?', null=True)),
                ('check_in_energia', models.CharField(blank=True, choices=[('si', 'S√≠, doy m√°s de lo que recibo'), ('no', 'No, est√° equilibrado'), ('duda', 'No estoy seguro/a')], max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DietaAsignada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='EstadoSemanal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semana_inicio', models.DateField()),
                ('semana_fin', models.DateField()),
                ('promedio_sueno', models.DecimalField(decimal_places=2, max_digits=4)),
                ('promedio_rpe', models.DecimalField(decimal_places=2, max_digits=4)),
                ('humor_dominante', models.CharField(choices=[('verde', 'üòä Bien'), ('amarillo', 'üòê Neutro'), ('rojo', 'üòû Bajo')], max_length=20)),
                ('mensaje_joi', models.TextField(blank=True)),
                ('sugerencia', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Medida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('valor', models.FloatField(blank=True, null=True)),
                ('unidad', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MiniReto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semana_inicio', models.DateField()),
                ('descripcion', models.CharField(max_length=200)),
                ('cumplido', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ObjetivoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medida', models.CharField(choices=[('peso', 'Peso (kg)'), ('grasa', 'Grasa corporal (%)'), ('cintura', 'Cintura (cm)')], max_length=20)),
                ('valor', models.FloatField()),
                ('fecha', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ObjetivoPeso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peso_objetivo_kg', models.DecimalField(decimal_places=2, max_digits=5)),
                ('fecha_inicio', models.DateField(auto_now_add=True)),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('alcanzado', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Objetivo de Peso',
                'verbose_name_plural': 'Objetivos de Peso',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='PesoDiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now_add=True, unique=True)),
                ('peso_kg', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'verbose_name': 'Peso Diario',
                'verbose_name_plural': 'Pesos Diarios',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='PlanNutricional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True)),
                ('edad', models.IntegerField()),
                ('genero', models.CharField(max_length=1)),
                ('altura_cm', models.DecimalField(decimal_places=2, max_digits=5)),
                ('peso_kg', models.DecimalField(decimal_places=2, max_digits=5)),
                ('nivel_actividad', models.CharField(max_length=20)),
                ('objetivo', models.CharField(max_length=20)),
                ('calorias_estimadas', models.DecimalField(decimal_places=2, max_digits=7)),
                ('gramos_proteinas', models.DecimalField(decimal_places=2, max_digits=7)),
                ('gramos_grasas', models.DecimalField(decimal_places=2, max_digits=7)),
                ('gramos_carbohidratos', models.DecimalField(decimal_places=2, max_digits=7)),
                ('plan_generado_texto', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RevisionProgreso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now_add=True)),
                ('peso_corporal', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('grasa_corporal', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cintura', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('pecho', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('biceps', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('muslos', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('hombro', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cuello', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('antebrazos', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('caderas', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('gemelos', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'ordering': ['fecha'],
            },
        ),
        migrations.CreateModel(
            name='SugerenciaAceptada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semana_inicio', models.DateField()),
                ('tipo', models.CharField(choices=[('subir', 'Subir carga'), ('bajar', 'Bajar carga'), ('mantener', 'Mantener carga')], max_length=20)),
                ('aceptada', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('telefono', models.CharField(max_length=20)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('direccion', models.CharField(blank=True, max_length=255)),
                ('genero', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=10)),
                ('fecha_registro', models.DateField(auto_now_add=True)),
                ('membresia_activa', models.BooleanField(default=True)),
                ('fecha_vencimiento_membresia', models.DateField(blank=True, null=True)),
                ('proximo_registro_peso', models.DateField(blank=True, null=True)),
                ('peso_corporal', models.FloatField(blank=True, help_text='kg', null=True)),
                ('grasa_corporal', models.FloatField(blank=True, help_text='%', null=True)),
                ('cintura', models.FloatField(blank=True, help_text='cm', null=True)),
                ('pecho', models.FloatField(blank=True, help_text='cm', null=True)),
                ('hombro', models.FloatField(blank=True, help_text='cm', null=True)),
                ('cuello', models.FloatField(blank=True, help_text='cm', null=True)),
                ('biceps', models.FloatField(blank=True, help_text='cm', null=True)),
                ('antebrazos', models.FloatField(blank=True, help_text='cm', null=True)),
                ('caderas', models.FloatField(blank=True, help_text='cm', null=True)),
                ('muslos', models.FloatField(blank=True, help_text='cm', null=True)),
                ('gemelos', models.FloatField(blank=True, help_text='cm', null=True)),
                ('entrenos_perfectos', models.PositiveIntegerField(default=0)),
                ('foto', models.ImageField(blank=True, default='clientes_fotos/default.png', null=True, upload_to='clientes_fotos/')),
                ('experiencia_a√±os', models.FloatField(default=0, help_text='A√±os de experiencia entrenando de forma consistente.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='A√±os de experiencia')),
                ('objetivo_principal', models.CharField(choices=[('hipertrofia', 'Hipertrofia Muscular'), ('fuerza', 'Ganancia de Fuerza'), ('perdida_peso', 'P√©rdida de Peso'), ('resistencia', 'Mejora de Resistencia'), ('general', 'Salud General')], default='general', help_text='El objetivo principal del cliente para personalizar su experiencia.', max_length=50)),
                ('dias_disponibles', models.IntegerField(default=4, help_text='D√≠as reales por semana que puede entrenar (2-7)', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(7)], verbose_name='D√≠as disponibles por semana')),
                ('tiempo_por_sesion', models.IntegerField(default=90, help_text='Minutos reales disponibles por sesi√≥n (30-180)', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(180)], verbose_name='Tiempo por sesi√≥n (minutos)')),
                ('ejercicios_preferidos', models.JSONField(default=list, help_text='Ejercicios que disfruta hacer - mejora adherencia', verbose_name='Ejercicios preferidos')),
                ('ejercicios_evitar', models.JSONField(default=list, help_text='Ejercicios que no puede/quiere hacer - lesiones, limitaciones', verbose_name='Ejercicios a evitar')),
                ('flexibilidad_horario', models.BooleanField(default=True, help_text='¬øPuede cambiar horarios si surge un imprevisto?', verbose_name='Flexibilidad de horario')),
                ('nivel_estres', models.IntegerField(default=5, help_text='Nivel de estr√©s actual (1=muy bajo, 10=muy alto)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Nivel de estr√©s')),
                ('calidad_sue√±o', models.IntegerField(default=7, help_text='Calidad del sue√±o (1=muy mala, 10=excelente)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Calidad del sue√±o')),
                ('nivel_energia', models.IntegerField(default=7, help_text='Nivel de energ√≠a general (1=muy bajo, 10=muy alto)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Nivel de energ√≠a')),
                ('one_rm_data', models.JSONField(default=dict, help_text="1RM por ejercicio: {'sentadilla': 100, 'press_banca': 80, 'peso_muerto': 120}", verbose_name='Datos de 1RM')),
                ('historial_volumen', models.JSONField(default=dict, help_text="Series por semana por grupo muscular: {'pecho': 16, 'espalda': 18, 'piernas': 20}", verbose_name='Historial de volumen')),
                ('perfil_nutricion', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cliente_asociado', to='nutricion_app_django.userprofile', verbose_name='Perfil de Nutrici√≥n')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
    ]
